VERSION 5.00
Object = "{248DD890-BB45-11CF-9ABC-0080C7E7B78D}#1.0#0"; "MSWINSCK.OCX"
Begin VB.Form GateListener 
   BorderStyle     =   4  'Fixed ToolWindow
   Caption         =   "GateServer Listener"
   ClientHeight    =   1650
   ClientLeft      =   1740
   ClientTop       =   930
   ClientWidth     =   4845
   Icon            =   "GateLstn.frx":0000
   LinkTopic       =   "Form1"
   MaxButton       =   0   'False
   PaletteMode     =   1  'UseZOrder
   ScaleHeight     =   1650
   ScaleWidth      =   4845
   ShowInTaskbar   =   0   'False
   Begin MSWinsockLib.Winsock TcpListener 
      Left            =   1560
      Top             =   840
      _ExtentX        =   741
      _ExtentY        =   741
   End
   Begin VB.Timer Timer 
      Enabled         =   0   'False
      Interval        =   1000
      Left            =   900
      Top             =   60
   End
End
Attribute VB_Name = "GateListener"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
'/////////////////////////////////////////////////////////
' GateLstn.frm: Gatekeeper server TCP listener socket
'               handler.
'
' Reference implementation Copyright 1996 Epic MegaGames, Inc.
' Code compiled in Visual Basic 4.0, Professional Edition.
'
' Purpose:
'   Listens for new connections.  Whenever a new connection
'   comes in, passes it to the Gatekeeper server for processing.
'
' Revision history:
' * Created by Tim Sweeney
'/////////////////////////////////////////////////////////

Option Explicit

'/////////////////////////////////////////////////////////
' Private variables.
'/////////////////////////////////////////////////////////

' GateLog instance to use for logging.
Private Log As GateLog
Private ConnectionList As GateConnectionList
Private Keeper As Gatekeeper

' Set this to True to log all TCP communication information.
Const LogTcp = False

'/////////////////////////////////////////////////////////
' Public startup/shutdown.
'/////////////////////////////////////////////////////////

'
' Initialize this listener and set its logging device
' and port.
'
Public Sub Startup( _
    ThisConnectionList As GateConnectionList, _
    ThisLog As GateLog, _
    ThisKeeper As Gatekeeper, _
    Port As Long)

    ' Set our held objects.
    Set Log = ThisLog
    Set ConnectionList = ThisConnectionList
    Set Keeper = ThisKeeper

    ' Log message for tracking down init problems.
    Log.Log "Using TCP port " & Port & "."

    ' Begin listening on the port.
    TcpListener.LocalPort = Port
    TcpListener.Listen

    ' Successfully listening.
    Log.Log "Listening for connections."
End Sub

'
' Shutdown the listener and free its
' logging device.
'
Public Sub Shutdown()

    ' Close our TCP socket.
    TcpListener.Close
    
    ' Release our held objects.
    Set ConnectionList = Nothing
    Set Log = Nothing
    Set Keeper = Nothing
    
    ' Scram.
    Unload Me
End Sub

'/////////////////////////////////////////////////////////
' TCP events generated by the TCP control.
'/////////////////////////////////////////////////////////

'
' TCP close event. Never happens to a listening socket.
'
Private Sub TcpListener_Close()
    If LogTcp Then Log.Log "TcpListener_Close"
    Log.Log "CRITICAL: Received TclListener_Close."
End Sub

'
' TCP connection request event.  We forward these to the
' Gatekeeper server for processing.
'
Private Sub TcpListener_ConnectionRequest(ByVal requestID As Long)
    If LogTcp Then Log.Log "TcpListener_ConnectionRequest " & requestID
    
    ' Forward this request to the connection list.
    ConnectionList.AcceptConnection requestID
End Sub

'
' TCP error event.  Indicates that WinSock returned an error.
'
Private Sub TcpListener_Error(ByVal Number As Integer, Description As String, ByVal Scode As Long, ByVal Source As String, ByVal HelpFile As String, ByVal HelpContext As Long, CancelDisplay As Boolean)
    Log.Log "CRITICAL: TcpListener_Error: " & Description
End Sub

'/////////////////////////////////////////////////////////
' Standard form events.
'/////////////////////////////////////////////////////////

'
' Standard form load event.
'
Private Sub Form_Load()
    ' Do nothing.
End Sub

'
' Standard form unload event.
'
Private Sub Form_Unload(Cancel As Integer)
    ' Do nothing.
End Sub

'/////////////////////////////////////////////////////////
' Timer tick.
'/////////////////////////////////////////////////////////

'
' Timer tick. Just pass it back to the Gatekeeper.
'
Private Sub Timer_Timer()
    Keeper.Tick
End Sub

'/////////////////////////////////////////////////////////
' The End.
'/////////////////////////////////////////////////////////
