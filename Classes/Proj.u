DeclareClass Name=Script
DeclareClass Name=Pawn
DeclareClass Name=Class
DeclareClass Name=Projectile
DeclareClass Name=TentacleProjectile
DeclareClass Name=BulletProjectile
DeclareClass Name=StingerProjectile
DeclareClass Name=BruteProjectile
DeclareClass Name=SkaarjProjectile
DeclareClass Name=Burst
DeclareClass Name=rocket
DeclareClass Name=BigRock
DeclareClass Name=RazorBlade
DeclareClass Name=Electricity
DeclareClass Name=ImpalerBolt
DeclareClass Name=EnergyBolt
DeclareClass Name=Chunk
DeclareClass Name=FlakShell
DeclareClass Name=BallExplosion
DeclareClass Name=ShellCase
DeclareClass Name=Grenade
DeclareClass Name=KraalBolt
DeclareClass Name=TeleportProj
DeclareClass Name=FatRing
DeclareClass Name=FlameBall
DeclareClass Name=Rock2
DeclareClass Name=Rock3
DeclareClass Name=Chunk1
DeclareClass Name=Chunk2
DeclareClass Name=Chunk3
DeclareClass Name=Chunk4
DeclareClass Name=ShellCase2
DeclareClass Name=RifleShellCase
DeclareClass Name=Rock1

Begin Class Name=Projectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Projectile.
//
// A delayed-hit projectile moves around for some time after it is created.
// An instant-hit projectile acts immediately. 
//=============================================================================
class Projectile expands Actor
	abstract
	package(UnEngine);

#exec Texture Import File=..\Graphics\S_Camera.pcx Name=S_Camera Family=!Sprites Palette=Palette Mips=Off Flags=2

//-----------------------------------------------------------------------------
// Projectile variables.

// Projectile flags.
var() bool     bVerticalSeek;       // Automatically seek target vertically.
var() bool     bFollowFloor;        // Follow the floor as we move.
var() bool     bIsInstantHit;       // Is the projectile instant-hit?

// Effects on impact or at the end of the projectiles life (only 1 is selected).
var() class    EffectAtLifeSpan;    // Explosion or pyrotechnic when projectile expires.
var() class    EffectOnWallImpact;  // Explosion or pyrotechnic when projectile hits a wall.
var() class    EffectOnPawnImpact;  // Explosion or pyrotechnic when projectile hits a pawn.
var() class    EffectOnImpact;      // Default explosion or pyrotechnic on impact (when other effects do not apply).

// Motion information.
var() float    Speed;               // Initial speed of projectile.
var() float    MaxSpeed;            // Limit on speed of projectile (0 means no limit)
var() float    BounceIncidence;     // If bBounce, cosine of smallest incident angle (measured to normal) which causes bouncing. 0 for no restriction.
var() float    FollowFloorHeight;   // If bFollowFloor.
var() byte     MaxBounceCount;      // If bBounce, limit on number of bounces, or 0 for unlimited.
var byte       BounceCount;         // Number of times projectile has bounced.

// Damage attributes.
// DamageDecay() identifies the damage lost per tick (for a delayed-hit projectile)
// or the damage lost per unit distance travelled (for an instant-hit projectile).
var() float    Damage[4];           // Indexed by EDamageType.
var() float    DamageDecay[4];      // Damage lost per tick or distance.
var() byte     ExplosiveTransfer;   // Amount of explosive charge transfered to target (makes target volatile).

function ProjectileHit(actor other, int hitdamage, vector momentum)
{
	local actor HitActor;
	local vector HitLocation,HitNormal;

	//adjust hit location based on doing a trace (more accurate than touch)
	HitActor = Trace(HitLocation, HitNormal, Location + 60 * Normal(Location - OldLocation), OldLocation, true);
	if (HitActor == Other)
		Other.Damage(hitdamage, instigator,HitLocation,momentum);
	else		
		Other.Damage(hitdamage, instigator,Location,momentum);
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      bVerticalSeek=False
      bFollowFloor=False
      bIsInstantHit=False
      EffectAtLifeSpan=None
      EffectOnWallImpact=None
      EffectOnPawnImpact=None
      EffectOnImpact=None
      Speed=+00000.000000
      MaxSpeed=+02000.000000
      BounceIncidence=+00000.000000
      FollowFloorHeight=+00000.000000
      MaxBounceCount=0
      BounceCount=0
      Damage(0)=+00000.000000
      Damage(1)=+00000.000000
      Damage(2)=+00000.000000
      Damage(3)=+00000.000000
      DamageDecay(0)=+00000.000000
      DamageDecay(1)=+00000.000000
      DamageDecay(2)=+00000.000000
      DamageDecay(3)=+00000.000000
      ExplosiveTransfer=0
      bDirectional=True
      bCollideActors=True
      bCollideWorld=True
      Texture=S_Camera
      SoundVolume=0
      CollisionRadius=+00016.000000
      CollisionHeight=+00016.000000
      Physics=PHYS_Flying
      bMomentum=True
      LifeSpan=+00140.000000
      DefaultEdCategory=Projectile
   End DefaultProperties
End Class

Begin Class Name=TentacleProjectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// TentacleProjectile.
//=============================================================================
class TentacleProjectile expands Projectile
	package(UnGame);

#exec MESH IMPORT MESH=TarydiumProjectile ANIVFILE=..\MODELS\aniv52.3D DATAFILE=..\MODELS\data52.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=TarydiumProjectile X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=TarydiumProjectile SEQ=All  STARTFRAME=0  NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Tarydium1 FILE=..\MODELS\shells.PCX FAMILY="Skins" PALETTE=Tarydium1 ;FLAGS=2 ; if masked
#exec MESHMAP NEW   MESHMAP=TarydiumProjectile MESH=TarydiumProjectile 
#exec MESHMAP SCALE MESHMAP=TarydiumProjectile X=0.015 Y=0.015 Z=0.03
#exec MESHMAP SETTEXTURE MESHMAP=TarydiumProjectile NUM=4 TEXTURE=Tarydium1


#exec AUDIO IMPORT FILE="..\Sounds\NAILGUN.UFX" NAME="NAILGUN" FAMILY="Weapons"

function Spawned()
{
//	PlaySound(Sound 'NailGun');
	Velocity = vector(Rotation) * 360.0;
}

function Tick( float DeltaTime )
{
	local rotation newRot;
	Move(Velocity * DeltaTime);
	newRot = Rotation;
	newRot.Yaw += 100000 * DeltaTime;
	setRotation(newRot);
	Velocity = Velocity >> (rot(0,20000,0)*DeltaTime);
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      Speed=+00040.000000
      MaxSpeed=+00000.000000
      Damage(0)=+00012.000000
      DamageDecay(0)=+00000.050000
      DrawType=DT_Mesh
      Mesh=TarydiumProjectile
      CollisionRadius=+00005.000000
      CollisionHeight=+00005.000000
      Mass=+00002.000000
      LifeSpan=+00015.000000
      AnimRate=+00001.000000
   End DefaultProperties
End Class

Begin Class Name=BulletProjectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// BulletProjectile.
//=============================================================================
class BulletProjectile expands Projectile
	package(UnGame);

	
auto state Flying
{

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * 300.0;
	SetTimer(7.0,false); //self destruct after 7.0 seconds
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      bIsInstantHit=True
      Speed=+200000.000000
      MaxSpeed=+00000.000000
      Damage(0)=+00010.000000
      DamageDecay(0)=+00000.010000
      CollisionRadius=+00000.000000
      CollisionHeight=+00000.000000
      Mass=+00000.002000
   End DefaultProperties
End Class

Begin Class Name=StingerProjectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// StingerProjectile.
//=============================================================================
class StingerProjectile expands Projectile
	package(UnGame);

#exec MESH IMPORT MESH=TarydiumProjectile ANIVFILE=..\MODELS\aniv52.3D DATAFILE=..\MODELS\data52.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=TarydiumProjectile X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=TarydiumProjectile SEQ=All  STARTFRAME=0  NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Tarydium1 FILE=..\MODELS\shells.PCX FAMILY="Skins" PALETTE=Tarydium1 
#exec MESHMAP NEW   MESHMAP=TarydiumProjectile MESH=TarydiumProjectile 
#exec MESHMAP SCALE MESHMAP=TarydiumProjectile X=0.015 Y=0.015 Z=0.03
#exec MESHMAP SETTEXTURE MESHMAP=TarydiumProjectile NUM=4 TEXTURE=Tarydium1

#exec AUDIO IMPORT FILE="..\Sounds\stinger\Ricochet.UFX" NAME="Ricochet" FAMILY="Stinger"

var rotation RandRot;
var vector X,Y,Z;
var bool bLighting;

/////////////////////////////////////////////////////
auto state Flying
{
function Timer()
{
	GoToState('Exploding');
}

singular function Touch (Actor Other)
{
	local int hitdamage;

	if (Other != instigator)
	{
	if (StingerProjectile(Other) == none)
	{
		hitdamage = 27;
		Other.Damage(hitdamage, instigator,Location,
			(1500.0 * float(hitdamage) * Normal(Velocity)) );
		GotoState('Exploding');
	}
	}
}

function HitWall (vector HitNormal)
{
	GotoState('Exploding');
	PlaySound(sound 'Ricochet', 0.5);
}

Begin:
	Physics = PHYS_Projectile;
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);	
	Velocity = (X dot Owner.Velocity) * X   // Impart ONLY forward
			+ Vector(Rotation) * 650.0           // velocity
			+ Vector(Rotation) * ((FRand() * 50)-25);
	MaxSpeed = 1000;
	SetTimer(7.0,false);                  //self destruct after 7.0 seconds
	RandRot.Pitch = FRand() * 200 - 100;
	RandRot.Yaw = FRand() * 200 - 100;
	RandRot.Roll = FRand() * 200 - 100;
	Velocity = Velocity >> RandRot;	
	RandRot.Pitch = 0;
	RandRot.Yaw = 0;
	bBounce = True;
	If (bLighting) LightType = LT_Flicker;
}




///////////////////////////////////////////////////////
state Exploding
{
Begin:
	Physics = PHYS_None; 
	MakeNoise(1.0); //FIXME - set appropriate loudness 
  	Destroy();
  	Spawn(Class'Burst');
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      bLighting=False
      Speed=+00060.000000
      MaxSpeed=+01000.000000
      BounceIncidence=+00000.870000
      MaxBounceCount=3
      Damage(0)=+00002.000000
      DamageDecay(0)=+00000.059000
      ExplosiveTransfer=10
      DrawType=DT_Mesh
      Mesh=TarydiumProjectile
      AmbientGlow=215
      CollisionRadius=+00005.000000
      CollisionHeight=+00005.000000
      LightBrightness=88
      LightHue=188
      LightSaturation=128
      LightRadius=6
      LightPeriod=50
      VolumeBrightness=64
      VolumeRadius=64
      bNoSmooth=True
      bMeshCurvy=False
      Physics=PHYS_Projectile
      bBounce=True
      Mass=+00002.000000
      LifeSpan=+00034.000000
      AnimRate=+00001.000000
   End DefaultProperties
End Class

Begin Class Name=BruteProjectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// BruteProjectile.
//=============================================================================
class BruteProjectile expands Projectile;

#exec MESH IMPORT MESH=Rocket ANIVFILE=..\MODELS\rocket_a.3D DATAFILE=..\MODELS\rocket_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Rocket X=0 Y=0 Z=0 YAW=-64

#exec MESH SEQUENCE MESH=Rocket SEQ=All       STARTFRAME=0   NUMFRAMES=6
#exec MESH SEQUENCE MESH=Rocket SEQ=Still     STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=WingIn    STARTFRAME=1   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=Armed     STARTFRAME=1   NUMFRAMES=3
#exec MESH SEQUENCE MESH=Rocket SEQ=SpinCCW   STARTFRAME=4   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=SpinCW    STARTFRAME=5   NUMFRAMES=1

#exec TEXTURE IMPORT NAME=JRocket1 FILE=..\MODELS\rocket.PCX FAMILY=Skins PALETTE=Jrocket1 FLAGS=2
#exec MESHMAP NEW   MESHMAP=rocket MESH=rocket
#exec MESHMAP SCALE MESHMAP=rocket X=0.025 Y=0.025 Z=0.05 YAW=128
#exec MESHMAP SETTEXTURE MESHMAP=rocket NUM=1 TEXTURE=Jrocket1

#exec AUDIO IMPORT FILE="..\Sounds\EightBal\Ignite.UFX" NAME="Ignite" FAMILY="Eightball"

function Spawned()
{
	//PlaySound(sound(NailGun));
	speed = 1000.0;
	instigator = Pawn(owner);
	playAnim('SpinCW');
} 

auto state Flying
{
function Timer()
{
	Explode();
}

singular function Touch (Actor Other)
{
	local vector momentum;
//	log(Other.Class$" touched missile");

	if (Other != instigator)
	{
		momentum = 15000.0 * Normal(velocity);
		ProjectileHit(Other, 10, momentum);
		Explode();

	}
}

function Explode()
{
	MakeNoise(1.0); //FIXME - set appropriate loudness
	spawn(class 'FlameBall');
	Destroy();
}

function HitWall (vector HitNormal)
{
//	log("missile hit wall");
	Explode();
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * speed;
	SetTimer(7.0,false); //self destruct after 7.0 seconds
	PlaySound(Sound 'Ignite');
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      Speed=+00500.000000
      MaxSpeed=+00700.000000
      DrawType=DT_Mesh
      Mesh=rocket
      AmbientGlow=62
      CollisionRadius=+00002.000000
      CollisionHeight=+00002.000000
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=SkaarjProjectile
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// SkaarjProjectile.
//=============================================================================
class SkaarjProjectile expands Projectile;

#exec MESH IMPORT MESH=ibolt ANIVFILE=..\MODELS\ibolt_a.3D DATAFILE=..\MODELS\ibolt_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=ibolt X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=ibolt SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=ibolt SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=JImpale1 FILE=..\MODELS\Impaler.PCX FAMILY=Skins PALETTE=JImpale1 
#exec MESHMAP NEW   MESHMAP=ibolt MESH=ibolt
#exec MESHMAP SCALE MESHMAP=ibolt X=0.07 Y=0.07 Z=0.14
#exec MESHMAP SETTEXTURE MESHMAP=ibolt NUM=1 TEXTURE=JImpale1

function Spawned()
{
	//PlaySound(sound(NailGun));
	speed = 800.0; //must set here for creature AI
	instigator = Pawn(owner);
} 

auto state Flying
{
function Timer()
{
	Explode();
}

singular function Touch (Actor Other)
{
	local vector momentum;
//	log(Other.Class$" touched missile");

	if ((Other != instigator) && (SkaarjProjectile(Other) == None))
		{
		momentum = 10000.0 * Normal(Velocity);
		ProjectileHit(Other, 15, momentum);
		Destroy();
		}

}

function HitWall (vector HitNormal)
{
//	log("missile hit wall");
	Explode();
}

function Explode()


{
	spawn(class 'Electricity');
	destroy();
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * speed;
	SetTimer(7.0,false); //self destruct after 7.0 seconds
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      MaxSpeed=+01000.000000
      DrawType=DT_Mesh
      Mesh=ibolt
      DrawScale=+00002.000000
      CollisionRadius=+00001.000000
      CollisionHeight=+00001.000000
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=rocket
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// rocket.
//=============================================================================
class rocket expands Projectile;

#exec MESH IMPORT MESH=Rocket ANIVFILE=..\MODELS\rocket_a.3D DATAFILE=..\MODELS\rocket_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Rocket X=0 Y=0 Z=0 YAW=-64

#exec MESH SEQUENCE MESH=Rocket SEQ=All       STARTFRAME=0   NUMFRAMES=6
#exec MESH SEQUENCE MESH=Rocket SEQ=Still     STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=WingIn    STARTFRAME=1   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=Armed     STARTFRAME=1   NUMFRAMES=3
#exec MESH SEQUENCE MESH=Rocket SEQ=SpinCCW   STARTFRAME=4   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Rocket SEQ=SpinCW    STARTFRAME=5   NUMFRAMES=1

#exec TEXTURE IMPORT NAME=JRocket1 FILE=..\MODELS\rocket.PCX FAMILY=Skins PALETTE=Jrocket1 
#exec MESHMAP NEW   MESHMAP=rocket MESH=rocket
#exec MESHMAP SCALE MESHMAP=rocket X=0.025 Y=0.025 Z=0.05 YAW=128
#exec MESHMAP SETTEXTURE MESHMAP=rocket NUM=1 TEXTURE=Jrocket1

#exec AUDIO IMPORT FILE="..\Sounds\EightBal\Ignite.UFX" NAME="Ignite" FAMILY="Eightball"
#exec AUDIO IMPORT FILE="..\Sounds\EightBal\grenflor.UFX" NAME="GrenadeFloor" FAMILY="Eightball"

var rotation RandRot,NormUp,DestRotation,NewRotation;
var int NumBounces;
var Actor Seeking;
var int IncTime;
var vector X,Y,Z;
var float MagnitudeVel;

function Spawned()
{
	PlayAnim('WingIn');
}

auto state Flying
{
function Timer()
{
	GoToState('Armed');
}

singular function Touch (Actor Other)
{
	local int hitdamage;
	if ((Other != instigator) && (Rocket(Other) == none)) GotoState('Exploding');
}

function Landed()
{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	NumBounces++;
	If (NumBounces > 5) GoToState('Exploding');
	HitWall(HitNormal);
}

function HitWall (vector HitNormal)
{
//	log("missile hit wall while inactive");
	PlaySound(Sound 'GrenadeFloor');
	Velocity = ( Velocity dot HitNormal ) * HitNormal * (-1.9) + Velocity;   // Reflect off Wall w/damping
	SetRotation(Rotation(Velocity));
}

Begin:
	Physics = PHYS_Projectile;
	LightBrightness = 0;
	Acceleration = vect(0,0,0);
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);	
	Velocity = Size(Owner.Velocity)*X + Vector(Rotation) * 650.0 +
		FRand() * 50 * Vector(Rotation);
	SetTimer(0.3,false);                  //Rocket begins unarmed
	RandRot.Pitch = FRand() * 500 - 250;
	RandRot.Yaw = FRand() * 500 - 250;
	RandRot.Roll = FRand() * 500 - 250;
	MaxSpeed = 1000;
	Velocity = Velocity >> RandRot;	
	RandRot.Pitch = 0;
	RandRot.Yaw = 0;
	bBounce = True;
	NumBounces = 0;
	PlaySound(Sound 'Ignite');
}

///////////////////////////////////////////////////////
state Exploding
{

function HurtRadius()
{
	local actor Victims;
	local int hitdamage;
	foreach RadiusActors( class 'Actor', Victims, 200.0 )
	{
		hitdamage = 125 - 0.35 * Size(Victims.Location-Location);
		Victims.Damage(hitdamage, instigator,Victims.Location,
		(2500.0  * float(hitdamage) * (Normal(Victims.Location - Location))));		
	}
}


Begin:
	NormUp.Pitch = 32768;
//	log("Eightball Exploding");
	HurtRadius();
 	Destroy();
 	spawn(class'FatRing',,,Location + vect(0,0,1)*16,NormUp); 	
 	spawn(class'FlameBall',,,Location + vect(0,0,1)*16,rotation(VRand()));  	
 }


///////////////////////////////////////////////////////
state Armed
{

function HitWall (vector HitNormal)
{

	GotoState('Exploding');
}

function Timer()
{
	If (Seeking != None  && Seeking != Instigator) 
	{
/*
//		log("Seeking " $ Seeking);
		DestRotation = rotation(Seeking.Location - Location);
		DestRotation.Pitch = Rotation.Pitch - DestRotation.Pitch;
		DestRotation.Yaw = Rotation.Yaw - DestRotation.Yaw;	
		if (DestRotation.pitch > 32767) DestRotation.pitch -= 65536;
		DestRotation.pitch = DestRotation.pitch * 0.3;
		if (DestRotation.yaw > 32767) DestRotation.yaw -= 65536;
		DestRotation.yaw = DestRotation.yaw * 0.3;
		if (DestRotation.yaw > 9000) DestRotation.yaw = 9000;
		if (DestRotation.pitch > 9000) DestRotation.Pitch = 9000;
		if (DestRotation.yaw < -9000) DestRotation.yaw = -9000;		
		if (DestRotation.Pitch < -9000) DestRotation.Pitch = -9000;		
		DestRotation.Roll = 0;
		Velocity = Velocity >> DestRotation;
*/		
		MagnitudeVel = Size(Velocity);
		Velocity =  MagnitudeVel * Normal( Normal(Seeking.Location - Location) 
			* 0.4 * MagnitudeVel + Velocity);		
		SetRotation(Rotation(Velocity));
	}
	IncTime++;
	If (LightBrightness < 175) LightBrightness += 25;
	If (IncTime > 20) GoToState('Exploding');
}

singular function Touch (Actor Other)
{
	local int hitdamage;
	if ((Other != instigator) && (Rocket(Other) == none)) GotoState('Exploding');
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = Vector(Rotation) * 10.0;
	SetTimer(0.1, True);
	PlayAnim( 'Armed', 0.3 );
	IncTime = 0;
	log("Seeking " $ Seeking);	
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      NormUp=(0,0,0)
      DestRotation=(0,0,0)
      NewRotation=(0,0,0)
      NumBounces=0
      Seeking=None
      IncTime=0
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      MagnitudeVel=+00000.000000
      MaxSpeed=+01000.000000
      DrawType=DT_Mesh
      Mesh=rocket
      AmbientGlow=96
      LightType=LT_Steady
      LightBrightness=160
      LightHue=28
      LightSaturation=120
      LightRadius=8
      bMeshCurvy=False
      Physics=PHYS_Falling
      bBounce=True
   End DefaultProperties
End Class

Begin Class Name=BigRock
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#exec AUDIO IMPORT FILE="..\Sounds\Titan\Rockhit1.UFX" NAME="Rockhit" FAMILY="Titan"


//=============================================================================
// BigRock.
//=============================================================================
class BigRock expands Projectile;

var rotation RandRot,NormUp;
var rotation GunRot;
var vector X,Y,Z;	

function Spawned()
{
	//PlaySound(sound(NailGun));
	speed = 800.0;
	instigator = Pawn(owner);
} 

auto state Flying
{

singular function Touch (Actor Other)
{
	local int hitdamage;

	PlaySound(Sound 'Rockhit', 0.5);	
	if (Other != instigator)
		if (BigRock(Other) == none)
			{
			hitdamage = 30; //FIXME - scale by velocity
			Other.Damage(hitdamage, instigator,Other.Location,
				(35000.0 * Normal(Velocity)) );
			Velocity = Normal(Other.Location - Location) * Size(Velocity) * 0.5;
			Physics = PHYS_Falling;
			}
}

function Landed()
	{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	HitWall(HitNormal);
	}

function HitWall (vector HitNormal)
	{
	local vector veldir;
	PlaySound(Sound 'Rockhit');	
	if ((HitNormal.Z > 0.8) && (Size(Velocity) < 50))
		{
		Physics = PHYS_None;
		Velocity = vect(0,0,0);
		Acceleration = vect(0,0,0);
		GotoState('Sitting');	
		}
	else
		{			
		Physics = PHYS_Falling;
		veldir = Normal(Velocity);
		veldir = veldir - 2 * HitNormal * (veldir Dot HitNormal);
		Velocity = 0.7 * Size(Velocity) * veldir;
		veldir.Z = 0;
		SetRotation(Rotation(veldir));
		}
	}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * speed;
	DesiredRotation = Rotation;
	DesiredRotation.Pitch = Rotation.Pitch + Rand(2000) - 1000;
	setRotation(DesiredRotation);
	bBounce = True;
}

State Sitting
{
Begin:
	Physics = PHYS_None;
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      NormUp=(0,0,0)
      GunRot=(0,0,0)
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      DrawType=DT_Mesh
      Physics=PHYS_Projectile
      bBounce=True
      bPitch=True
      bYaw=True
      bRoll=True
      LifeSpan=+00007.000000
   End DefaultProperties
End Class

Begin Class Name=Rock2
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Rock2.
//=============================================================================
class Rock2 expands BigRock;

#exec MESH IMPORT MESH=Chnk2 ANIVFILE=..\MODELS\Chunk2_a.3D DATAFILE=..\MODELS\Chunk2_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk2 X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=Chnk2 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk2 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 FLAGS=2
#exec MESHMAP NEW   MESHMAP=Chnk2 MESH=Chnk2
#exec MESHMAP SCALE MESHMAP=Chnk2 X=0.15 Y=0.15 Z=0.3
#exec MESHMAP SETTEXTURE MESHMAP=Chnk2 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      Mesh=Chnk2
      CollisionRadius=+00022.000000
      CollisionHeight=+00022.000000
      Physics=PHYS_Falling
   End DefaultProperties
End Class

Begin Class Name=Rock3
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Rock3.
//=============================================================================
class Rock3 expands BigRock;

#exec MESH IMPORT MESH=Chnk4 ANIVFILE=..\MODELS\Chunk4_a.3D DATAFILE=..\MODELS\Chunk4_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk4 X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=Chnk4 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk4 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 FLAGS=2
#exec MESHMAP NEW   MESHMAP=Chnk4 MESH=Chnk4
#exec MESHMAP SCALE MESHMAP=Chnk4 X=0.15 Y=0.15 Z=0.2
#exec MESHMAP SETTEXTURE MESHMAP=Chnk4 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      Mesh=Chnk4
      CollisionRadius=+00022.000000
      CollisionHeight=+00022.000000
      Physics=PHYS_Falling
   End DefaultProperties
End Class

Begin Class Name=Rock1
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Rock1.
//=============================================================================
class Rock1 expands BigRock;

#exec MESH IMPORT MESH=Chnk1 ANIVFILE=..\MODELS\Chunk1_a.3D DATAFILE=..\MODELS\Chunk1_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk1 X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=Chnk1 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk1 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 FLAGS=2
#exec MESHMAP NEW   MESHMAP=Chnk1 MESH=Chnk1
#exec MESHMAP SCALE MESHMAP=Chnk1 X=0.1 Y=0.1 Z=0.2
#exec MESHMAP SETTEXTURE MESHMAP=Chnk1 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      Mesh=Chnk1
      CollisionRadius=+00022.000000
      CollisionHeight=+00022.000000
      Physics=PHYS_Falling
   End DefaultProperties
End Class

Begin Class Name=RazorBlade
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// RazorBlade.
//=============================================================================
class RazorBlade expands Projectile;

#exec MESH IMPORT MESH=razorb ANIVFILE=..\MODELS\razorb_a.3D DATAFILE=..\MODELS\razorb_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=razorb X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=razorb SEQ=All    STARTFRAME=0   NUMFRAMES=15
#exec MESH SEQUENCE MESH=razorb SEQ=Spin  STARTFRAME=0   NUMFRAMES=15
#exec TEXTURE IMPORT NAME=Jrazor1 FILE=..\MODELS\razor.PCX FAMILY=Skins PALETTE=Jrazor1 
#exec MESHMAP NEW   MESHMAP=razorb MESH=razorb 
#exec MESHMAP SCALE MESHMAP=razorb X=0.05 Y=0.05 Z=0.1
#exec MESHMAP SETTEXTURE MESHMAP=razorb NUM=1 TEXTURE=Jrazor1

#exec AUDIO IMPORT FILE="..\Sounds\Razor\hum.UFX" NAME="RazorHum" FAMILY="RazorJack"
#exec AUDIO IMPORT FILE="..\Sounds\Razor\bladehit.UFX" NAME="BladeHit" FAMILY="RazorJack"
#exec AUDIO IMPORT FILE="..\Sounds\Razor\start2.UFX" NAME="StartBlade" FAMILY="RazorJack"



var vector X,Y,Z;	
var int NumWallHits,TickTime;
var bool bAltMode;
var int CurPitch,PitchStart,YawStart,CurYaw;
var rotation CurRotation;
var bool bPitchMode;

/////////////////////////////////////////////////////
auto state Flying
{

singular function Touch (Actor Other)
{
	local int hitdamage;
//	log(Other.Class$" touched Blade");
	if (Pawn(Other) != Instigator)
	{
		hitdamage = 30;
		Other.Damage(hitdamage, instigator,Location,
			(1500.0 * float(hitdamage) * Normal(Velocity)) );
		Velocity += ( Velocity dot Normal(Other.Location - Location))
			* Normal(Other.Location - Location) * (-1.9);
	}
	else if (TickTime > 0)
	{
		hitdamage = 30;
		Other.Damage(hitdamage, instigator,Location,
			(1500.0 * float(hitdamage) * Normal(Velocity)) );
		Velocity += ( Velocity dot Normal(Other.Location - Location))
			* Normal(Other.Location - Location) * (-1.9);		
	}
}

function Timer()
{	
	if (!bPitchMode)
	{
		if (TickTime < 4) 
		{
			CurPitch = Pawn(Owner).ViewRotation.Pitch - PitchStart;
			if (Curpitch > 32767) CurPitch = CurPitch-65536;
			CurPitch = 0.3 * CurPitch;
		}
		if (CurPitch < -3000) CurPitch = -3000;		
		if (CurPitch > 3000) CurPitch = 3000;		
		CurRotation = Rotation;
		CurRotation.Pitch += CurPitch;
		SetRotation(CurRotation);
	}
	else
	{
		if (TickTime < 4) 
		{
			CurYaw = Pawn(Owner).ViewRotation.Yaw - YawStart;
			if (CurYaw > 32767) Curyaw = CurYaw-65536;
			CurYaw = 0.3 * CurYaw;
		}
		If (CurYaw > 3000) CurYaw = 3000;
		If (CurYaw < -3000) CurYaw = -3000;		
		CurRotation = Rotation;
		CurRotation.Yaw += CurYaw;
	}
	SetRotation(CurRotation);	
	Velocity = Size(Velocity)*Vector(Rotation);		
	TickTime ++;
}


function HitWall (vector HitNormal)
{
	local rotation newRot;
//	log("Blade hit wall");
	PlaySound(Sound 'BladeHit', 0.2);
	Velocity += ( Velocity dot HitNormal) * HitNormal * (-2.0) ;  // Projectile dies after hitting wall - Steve is fixing
	newRot = Rotation(Velocity);
	if (bAltMode) newRot.Roll += 12768;
	SetRotation(newRot);
	
	NumWallHits++;
	if (NumWallHits > 6) Destroy();
	SetTimer(0, False);
	MakeNoise(0.5);		
}

Begin:
	Physics = PHYS_Projectile;
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);	
	Velocity = (X dot Owner.Velocity) * X     // Impart ONLY forward
		+ Vector(Rotation) * 400.0;                 // velocity
	If (Size(Velocity) < 300) Velocity = Normal(Velocity)*300;    // Create Min Velocity		
	bBounce = true;
	LoopAnim('Spin',1.0);
	NumWallHits = 0;
	Acceleration = Vector(Rotation) * 100.0;
	SetTimer(0.1,True);
	PitchStart = Pawn(Owner).ViewRotation.Pitch;
	YawStart = Pawn(Owner).ViewRotation.Yaw;	
	TickTime = 0;
	PlaySound(sound 'startblade',0.3);
	SoundPitch = 200 + 50 * FRand();	
	AmbientSoundSet(sound 'RazorHum');
//	PlaySound(sound 'RazorHum',0.3);	
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      NumWallHits=0
      TickTime=0
      bAltMode=False
      CurPitch=0
      PitchStart=0
      YawStart=0
      CurYaw=0
      CurRotation=(0,0,0)
      bPitchMode=False
      MaxSpeed=+00800.000000
      DrawType=DT_Mesh
      Mesh=razorb
      AmbientGlow=167
      SoundRadius=13
      SoundVolume=66
      SoundPitch=255
      CollisionRadius=+00006.000000
      CollisionHeight=+00002.000000
      bUnlit=True
      bMeshCurvy=False
      LifeSpan=+00005.000000
   End DefaultProperties
End Class

Begin Class Name=ImpalerBolt
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// ImpalerBolt.
//=============================================================================
class ImpalerBolt expands Projectile;

#exec MESH IMPORT MESH=ibolt ANIVFILE=..\MODELS\ibolt_a.3D DATAFILE=..\MODELS\ibolt_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=ibolt X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=ibolt SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=ibolt SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=JImpale1 FILE=..\MODELS\Impaler.PCX FAMILY=Skins PALETTE=JImpale1 
#exec MESHMAP NEW   MESHMAP=ibolt MESH=ibolt
#exec MESHMAP SCALE MESHMAP=ibolt X=0.07 Y=0.07 Z=0.14
#exec MESHMAP SETTEXTURE MESHMAP=ibolt NUM=1 TEXTURE=JImpale1


/////////////////////////////////////////////////////
auto state Flying
{
function Timer()
{
	GoToState('Exploding');
}

singular function Touch (Actor Other)
{
	local int hitdamage;
//	log(Other.Class$" touched missile");

	if (Other != instigator)
	{
	if (StingerProjectile(Other) == none)
	{
		hitdamage = 10;
		Other.Damage(hitdamage, instigator,Other.Location,
			(1500.0 * float(hitdamage) * Normal(Velocity)) );
		GotoState('Exploding');
	}
	}
}

function HitWall (vector HitNormal)
{
	log("missile hit wall");
	GotoState('Exploding');
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * 600.0;
	SetTimer(7.0,false);                  //self destruct after 7.0 seconds
	SetLocation( Location + Vect(0,0,25) );
}




///////////////////////////////////////////////////////
state Exploding
{
function Timer( )
{
  	Destroy();
  	Spawn(class'electricity');
}

Begin:
	Physics = PHYS_None; 
	MakeNoise(1.0); //FIXME - set appropriate loudness
	SetTimer(0.1,false); 
 	Log("missile exploded");
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      MaxSpeed=+01000.000000
      DrawType=DT_Mesh
      Mesh=ibolt
      bUnlit=True
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=EnergyBolt
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// EnergyBolt.
//=============================================================================
class EnergyBolt expands Projectile;

#exec MESH IMPORT MESH=bolt1 ANIVFILE=..\MODELS\bolt1_a.3D DATAFILE=..\MODELS\bolt1_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=bolt1 X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=bolt1 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=bolt1 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jmisc1 FILE=..\MODELS\misc.PCX FAMILY=Skins PALETTE=Jmisc1
#exec MESHMAP NEW   MESHMAP=bolt1 MESH=bolt1
#exec MESHMAP SCALE MESHMAP=bolt1 X=0.05 Y=0.05 Z=0.1
#exec MESHMAP SETTEXTURE MESHMAP=bolt1 NUM=1 TEXTURE=Jmisc1


/////////////////////////////////////////////////////
auto state Flying
{
function Timer()
{
	GoToState('Exploding');
}

function Touch (Actor Other)
{
	local int hitdamage;
	log(Other.Class$" touched missile");

	if (Other != instigator)
	{
	if (StingerProjectile(Other) == none)
	{
		hitdamage = 10;
		Other.Damage(hitdamage, instigator,Other.Location,
			(1500.0 * float(hitdamage) * Normal(Velocity)) );
		GotoState('Exploding');
	}
	}
}

function HitWall (vector HitNormal)
{
	log("missile hit wall");
	GotoState('Exploding');
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * 600.0;
	SetTimer(7.0,false);                  //self destruct after 7.0 seconds
	SetLocation( Location + vect(0,0,25) );
}




///////////////////////////////////////////////////////
state Exploding
{
function Timer()
{
  	Destroy();
  	Spawn(class'Burst');
}

Begin:
	Physics = PHYS_None; 
	MakeNoise(1.0); //FIXME - set appropriate loudness
	SetTimer(0.1,false); 
 	Log("missile exploded");
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      MaxSpeed=+01000.000000
      DrawType=DT_Mesh
      Mesh=bolt1
      AmbientGlow=67
      LightType=LT_Steady
      LightRadius=9
      bUnlit=True
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=Chunk
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Chunk.
//=============================================================================
class Chunk expands Projectile;

#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit1.UFX" NAME="Hit1" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit2.UFX" NAME="Hit2" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit3.UFX" NAME="Hit3" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit4.UFX" NAME="Hit4" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit5.UFX" NAME="Hit5" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\flachit6.UFX" NAME="Hit6" FAMILY="flak"
#exec AUDIO IMPORT FILE="..\Sounds\flak\chunkhit.UFX" NAME="ChunkHit" FAMILY="flak"

var rotation RandRot,NormUp;
var rotation GunRot;
var vector X,Y,Z;	
var bool bDelayTime;
var float Rand;

auto state Flying
{

function Timer()
{
	bDelayTime = True;
}


singular function Touch (Actor Other)
{
	local int hitdamage;

	if ( (Size(Velocity) > 50) && (Chunk(Other) == none))
	{
		If (Other!=Owner)
		{
			hitdamage = 20;
			Other.Damage(hitdamage, instigator,Location,
				(3500.0 * float(hitdamage) * Normal(Velocity)) );
			PlaySound(Sound 'ChunkHit');
			Destroy();
		}
		else if (bDelayTime)
		{
			hitdamage = 15;
			Other.Damage(hitdamage, instigator,Location,
				(3500.0 * float(hitdamage) * Normal(Velocity)) );
			PlaySound(Sound 'ChunkHit');				
			Destroy();		
		}
	}
}


function Landed()
{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	HitWall(HitNormal);	
}

function HitWall (vector HitNormal)
{
	Physics = PHYS_Falling;
	MakeNoise(0.6);		
	Velocity = 0.8*(( Velocity dot HitNormal ) * HitNormal * (-1.8 + FRand()*0.8) + Velocity);   // Reflect off Wall w/damping
	SetRotation(Rotation(Velocity));
	RotationSpeed = FRand() * 800 * Size(Velocity);	
	DesiredRotation = Rotation(Vrand());
	if (Size(Velocity) > 300 ) 
	{
		Rand = FRand();
		if (Rand < 0.2)	PlaySound(sound 'Hit1',0.5);	
		else if (Rand < 0.35) PlaySound(sound 'Hit2',0.5);
		else if (Rand < 0.5) PlaySound(sound 'Hit3',0.5);
		else if (Rand < 0.65) PlaySound(sound 'Hit4',0.5);
		else if (Rand < 0.8) PlaySound(sound 'Hit5',0.5);
		else  PlaySound(sound 'Hit6',0.5);				
	}
	If (Size(Velocity) < 5) 
	{
		bBounce = False;
		Physics = PHYS_None;
		RotationSpeed = 0;
		Velocity = vect(0,0,0);
	}
}

Begin:
	Physics = PHYS_Projectile;
	MaxSpeed = 1200;	
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);	
	Velocity = (X dot Owner.Velocity) * X +   // Impart ONLY forward
		Vector(Rotation) * 800.0 + 				// Velocity 
		Vector(Rotation)*(FRand() * 100 - 50);
	RandRot.Pitch = FRand() * 4000 - 2000;
	RandRot.Yaw = FRand() * 4000 - 2000;
	RandRot.Roll = FRand() * 4000 - 2000;
	Velocity = Velocity >> RandRot;
	RotationSpeed = FRand() * 300000;
	DesiredRotation = Rotation(Vrand());
	bBounce = True;
	bDelayTime = False;
	SetTimer(0.1, False);
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      NormUp=(0,0,0)
      GunRot=(0,0,0)
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      bDelayTime=False
      Rand=+00000.000000
      AmbientGlow=64
      bNoSmooth=True
      bMeshCurvy=False
      bBounce=True
      LifeSpan=+00003.000000
   End DefaultProperties
End Class

Begin Class Name=Chunk1
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Chunk1.
//=============================================================================
class Chunk1 expands Chunk;

#exec MESH IMPORT MESH=Chnk1 ANIVFILE=..\MODELS\Chunk1_a.3D DATAFILE=..\MODELS\Chunk1_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk1 X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=Chnk1 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk1 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 
#exec MESHMAP NEW   MESHMAP=Chnk1 MESH=Chnk1
#exec MESHMAP SCALE MESHMAP=Chnk1 X=0.03 Y=0.03 Z=0.06
#exec MESHMAP SETTEXTURE MESHMAP=Chnk1 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      DrawType=DT_Mesh
      Mesh=Chnk1
      AmbientGlow=96
      CollisionRadius=+00008.000000
      CollisionHeight=+00008.000000
      bBounce=False
   End DefaultProperties
End Class

Begin Class Name=Chunk2
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Chunk2.
//=============================================================================
class Chunk2 expands Chunk;

#exec MESH IMPORT MESH=Chnk2 ANIVFILE=..\MODELS\Chunk2_a.3D DATAFILE=..\MODELS\Chunk2_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk2 X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=Chnk2 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk2 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 
#exec MESHMAP NEW   MESHMAP=Chnk2 MESH=Chnk2
#exec MESHMAP SCALE MESHMAP=Chnk2 X=0.03 Y=0.03 Z=0.06
#exec MESHMAP SETTEXTURE MESHMAP=Chnk2 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      DrawType=DT_Mesh
      Mesh=Chnk2
      AmbientGlow=75
      CollisionRadius=+00006.000000
      CollisionHeight=+00006.000000
      bBounce=False
      LifeSpan=+00003.100000
   End DefaultProperties
End Class

Begin Class Name=Chunk3
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Chunk3.
//=============================================================================
class Chunk3 expands Chunk;

#exec MESH IMPORT MESH=Chnk3 ANIVFILE=..\MODELS\Chunk3_a.3D DATAFILE=..\MODELS\Chunk3_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk3 X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=Chnk3 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk3 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 
#exec MESHMAP NEW   MESHMAP=Chnk3 MESH=Chnk3
#exec MESHMAP SCALE MESHMAP=Chnk3 X=0.03 Y=0.03 Z=0.06
#exec MESHMAP SETTEXTURE MESHMAP=Chnk3 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      DrawType=DT_Mesh
      Mesh=Chnk3
      CollisionRadius=+00008.000000
      CollisionHeight=+00008.000000
      bBounce=False
      LifeSpan=+00002.900000
   End DefaultProperties
End Class

Begin Class Name=Chunk4
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Chunk4.
//=============================================================================
class Chunk4 expands Chunk;

#exec MESH IMPORT MESH=Chnk4 ANIVFILE=..\MODELS\Chunk4_a.3D DATAFILE=..\MODELS\Chunk4_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Chnk4 X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=Chnk4 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Chnk4 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 
#exec MESHMAP NEW   MESHMAP=Chnk4 MESH=Chnk4
#exec MESHMAP SCALE MESHMAP=Chnk4 X=0.03 Y=0.03 Z=0.06
#exec MESHMAP SETTEXTURE MESHMAP=Chnk4 NUM=1 TEXTURE=Jflakshel1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      DrawType=DT_Mesh
      Mesh=Chnk4
      CollisionRadius=+00008.000000
      CollisionHeight=+00008.000000
      bBounce=False
      LifeSpan=+00002.800000
   End DefaultProperties
End Class

Begin Class Name=FlakShell
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// FlakShell.
//=============================================================================
class FlakShell expands Projectile;

#exec MESH IMPORT MESH=FlakSh ANIVFILE=..\MODELS\FlakSh_a.3D DATAFILE=..\MODELS\FlakSh_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=FlakSh X=0 Y=0 Z=-0 YAW=-64
#exec MESH SEQUENCE MESH=FlakSh SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=FlakSh SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jflakshel1 FILE=..\MODELS\FlakShel.PCX FAMILY=Skins PALETTE=Jflakshel1 
#exec MESHMAP NEW   MESHMAP=FlakSh MESH=FlakSh
#exec MESHMAP SCALE MESHMAP=FlakSh X=0.16 Y=0.16 Z=0.32
#exec MESHMAP SETTEXTURE MESHMAP=FlakSh NUM=1 TEXTURE=Jflakshel1


var rotation RandRot,NormUp;
var chunk1 s1,s5;
var chunk2 s2,s6;
var chunk3 s3,s7;
var chunk4 s4,s8;
var vector X,Y,Z;	

auto state Flying
{
function Timer()
{
	GoToState('Exploding');
}

singular function Touch (Actor Other)
{
	local int hitdamage;
	if ((Other != instigator) && (FlakShell(Other) == none)) GoToState('Exploding');
}

function Landed()
{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	HitWall(HitNormal);
}


function HitWall (vector HitNormal)
{
//	log("Flak Shell hit a wall");
	Velocity = ( Velocity dot HitNormal ) * HitNormal * (-1.9) + Velocity;   // Reflect off Wall w/damping
	SetRotation(Rotation(Velocity));
	GoToState('Exploding');
}

Begin:
	
	Physics = PHYS_Falling;
	Acceleration = vect(0,0,0);
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);	
	Velocity = (X dot Owner.Velocity) * X   // Impart ONLY forward
		+ Vector(Rotation) * 650.0;               // velocity
	If (Size(Velocity) < 400) Velocity = Normal(Velocity)*400;    // Create Min Velocity
	Velocity.z += 200;
	SetTimer(3.0,false);        
	MaxSpeed = 1000;

}

///////////////////////////////////////////////////////
state Exploding
{

function HurtRadius()
{
	local actor Victims;
	local int hitdamage;
	foreach RadiusActors( class 'Actor', Victims, 150.0 )
	{
		hitdamage = 70 - 0.4 * Size(Victims.Location-Location);
		Victims.Damage(hitdamage, instigator,Victims.Location,
		(5500.0 * float(hitdamage) * (Normal(Victims.Location - Location))));		
	}
}


Begin:
	HurtRadius();	
 	Destroy();
 	Spawn( class'BallExplosion', Owner );
	s1 = Spawn(class 'Chunk1', Owner );
	s1.instigator = pawn(owner);
	s2 = Spawn(class 'Chunk2', Owner );
	s2.instigator = pawn(owner);
	s3 = Spawn(class 'Chunk3', Owner );
	s3.instigator = pawn(owner);
	s4 = Spawn(class 'Chunk4', Owner );
	s4.instigator = pawn(owner);
	s5 = Spawn(class 'Chunk1', Owner );
	s5.instigator = pawn(owner);
	s6 = Spawn(class 'Chunk2', Owner );
	s6.instigator = pawn(owner);
	s7 = Spawn(class 'Chunk3', Owner );
	s7.instigator = pawn(owner);
	s8 = Spawn(class 'Chunk4', Owner );
	s8.instigator = pawn(owner);
	

}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      NormUp=(0,0,0)
      s1=None
      s5=None
      s2=None
      s6=None
      s3=None
      s7=None
      s4=None
      s8=None
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      DrawType=DT_Mesh
      Mesh=FlakSh
      AmbientGlow=67
      CollisionRadius=+00009.000000
      CollisionHeight=+00009.000000
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=ShellCase
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// ShellCase.
//=============================================================================
class ShellCase expands Projectile;

#exec MESH IMPORT MESH=Shell ANIVFILE=..\MODELS\shell_a.3D DATAFILE=..\MODELS\shell_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Shell X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=Shell SEQ=All  STARTFRAME=0  NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Autom1 FILE=..\MODELS\automag.PCX FAMILY="Skins" PALETTE=Autom1 
#exec MESHMAP NEW   MESHMAP=Shell MESH=Shell
#exec MESHMAP SCALE MESHMAP=Shell X=0.011 Y=0.011 Z=0.022
#exec MESHMAP SETTEXTURE MESHMAP=Shell NUM=1 TEXTURE=Autom1

#exec AUDIO IMPORT FILE="..\Sounds\automag\shell1.UFX" NAME="Shell1" FAMILY="AutoMag"
#exec AUDIO IMPORT FILE="..\Sounds\automag\shell2.UFX" NAME="Shell2" FAMILY="AutoMag"
#exec AUDIO IMPORT FILE="..\Sounds\automag\shell3.UFX" NAME="Shell3" FAMILY="AutoMag"
#exec AUDIO IMPORT FILE="..\Sounds\automag\shell4.UFX" NAME="Shell4" FAMILY="AutoMag"


var vector X,Y,Z;
var float Rand;	

function Timer()
{
	Destroy();
}

function Landed()
{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	Rand = FRand();
//	if (Rand < 0.25) PlaySound(sound 'shell1');
//	else if (Rand < 0.50) PlaySound(sound 'shell2');	
//	else if (Rand < 0.75) PlaySound(sound 'shell3');
//	else PlaySound(sound 'shell4');		
	PlaySound(sound 'shell2', 0.5);
	HitWall(HitNormal);
}

function HitWall (vector HitNormal)
{
	Velocity = ( Velocity dot HitNormal ) * HitNormal * (-1.6 + FRand()*0.4) + Velocity;   // Reflect off Wall w/damping
	SetRotation(Rotation(Velocity));
}

auto state Flying
{
Begin:
	Physics = PHYS_Falling;
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);
	SetRotation(Pawn(Owner).Rotation);
	Velocity = ((FRand()*0.3+0.4)*X + (FRand()*0.2+0.2)*Y + (FRand()*0.3+1.0) * Z)*160;
	SetTimer(3.0,false);                  
	if (Level.bLonePlayer) SetTimer(0.4, false); 
	DesiredRotation = Rotation(VRand());
	RotationSpeed = 600000*FRand() - 300000;
	bBounce = False;
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      X=(+00000.000000,+00000.000000,+00000.000000)
      Y=(+00000.000000,+00000.000000,+00000.000000)
      Z=(+00000.000000,+00000.000000,+00000.000000)
      Rand=+00000.000000
      MaxSpeed=+01000.000000
      bCollideActors=False
      DrawType=DT_Mesh
      Mesh=Shell
      AmbientGlow=64
      CollisionRadius=+00004.000000
      CollisionHeight=+00004.000000
      bUnlit=True
      bNoSmooth=True
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=ShellCase2
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// ShellCase2.
//=============================================================================
class ShellCase2 expands ShellCase;

auto state Flying
{
Begin:
	Physics = PHYS_Falling;
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);
	SetRotation(Pawn(Owner).Rotation);
	Velocity = ((FRand()*0.3+0.4)*X + (FRand()*0.1-0.2)*Y + (FRand()*0.3+1.0) * Z)*160;
	SetTimer(3.0,false);                  
//	if (bPlayerLone) SetTimer(0.4, false) // Reduce Total Actors
	bPitch = True;
	bYaw = True;
	RotationSpeed = 20000;
	bBounce = False;
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      AmbientGlow=0
   End DefaultProperties
End Class

Begin Class Name=RifleShellCase
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// RifleShellCase.
//=============================================================================
class RifleShellCase expands ShellCase;

auto state Flying
{
Begin:
	Physics = PHYS_Falling;
	GetAxes(Pawn(Owner).ViewRotation,X,Y,Z);
	SetRotation(Pawn(Owner).Rotation);
	Velocity = ((FRand()*0.3+0.4)*X + (FRand()*0.1-0.4)*Y + (FRand()*0.3+1.0) * Z)*160;
	SetTimer(3.0,false);                  
//	if (bPlayerLone) SetTimer(0.4, false) // Reduce Total Actors
	bPitch = True;
	bYaw = True;
	RotationSpeed = 20000;
	
//	bBounce = True;
	bBounce = False;
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      AmbientGlow=0
   End DefaultProperties
End Class

Begin Class Name=Grenade
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// Grenade.
//=============================================================================
class Grenade expands Projectile;

#exec MESH IMPORT MESH=Grenade ANIVFILE=..\MODELS\rocket_a.3D DATAFILE=..\MODELS\rocket_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=Grenade X=0 Y=0 Z=0 YAW=-64

#exec MESH SEQUENCE MESH=Grenade SEQ=All       STARTFRAME=0   NUMFRAMES=6
#exec MESH SEQUENCE MESH=Grenade SEQ=Still     STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Grenade SEQ=WingIn    STARTFRAME=1   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Grenade SEQ=Armed     STARTFRAME=1   NUMFRAMES=3
#exec MESH SEQUENCE MESH=Grenade SEQ=SpinCCW   STARTFRAME=4   NUMFRAMES=1
#exec MESH SEQUENCE MESH=Grenade SEQ=SpinCW    STARTFRAME=5   NUMFRAMES=1

#exec TEXTURE IMPORT NAME=JRocket1 FILE=..\MODELS\Rocket.PCX FAMILY=Skins PALETTE=JRocket1 
#exec MESHMAP NEW   MESHMAP=Grenade MESH=Grenade
#exec MESHMAP SCALE MESHMAP=Grenade X=0.025 Y=0.025 Z=0.05 YAW=128
#exec MESHMAP SETTEXTURE MESHMAP=Grenade NUM=1 TEXTURE=JRocket1

#exec AUDIO IMPORT FILE="..\Sounds\EightBal\grenflor.UFX" NAME="GrenadeFloor" FAMILY="Eightball"

var rotation RandRot,NormUp;

function Spawned()
{
	PlayAnim('WingIn',, False);
}


auto state Flying
{
function Timer()
{
	GoToState('Exploding');
}

function Landed()
{
	local vector HitNormal;
	HitNormal = vect(0,0,1);
	HitWall(HitNormal);
}

singular function Touch (Actor Other)
{
	local int hitdamage;
//	log(Other.Class$" touched Grenade");

	if (Other != instigator)
	{
		if (Grenade(Other) == none)
		{
			GotoState('Exploding');
		}
	}
}


function HitWall (vector HitNormal)
{
//	log("missile hit wall while inactive");
	Velocity = 0.8*(( Velocity dot HitNormal ) * HitNormal * (-2.0) + Velocity);   // Reflect off Wall w/damping
	RotationSpeed = FRand() * 1000 * Size(Velocity);	
	DesiredRotation = Rotation(Vrand());
	PlaySound(Sound 'GrenadeFloor', Size(Velocity)/1300 );
	If (Size(Velocity) < 20) 
	{
		bBounce = False;
		Physics = PHYS_None;
		RotationSpeed = 0;
		Velocity = vect(0,0,0);
	}
}

Begin:
	Physics = PHYS_Falling;
	Velocity = Owner.Velocity + Vector(Rotation) * 500.0 +
		FRand() * 50 * Vector(Rotation);
	Velocity.z += 200;
	SetTimer(3.0,false);                  //Grenade begins unarmed
	RandRot.Pitch = FRand() * 1400 - 700;
	RandRot.Yaw = FRand() * 1400 - 700;
	RandRot.Roll = FRand() * 1400 - 700;
	MaxSpeed = 1000;
	Velocity = Velocity >> RandRot;	
	RotationSpeed = FRand() * 100000;	
	DesiredRotation = Rotation(Vrand());	
}

///////////////////////////////////////////////////////
state Exploding
{


function HurtRadius()
{
	local actor Victims;
	local int hitdamage;
	foreach RadiusActors( class 'Actor', Victims, 200.0 )
	{
//		log("Actor " $ Victims $ " is within 200 units");
		hitdamage = 125 - 0.25 * Size(Victims.Location-Location);
		Victims.Damage(hitdamage, instigator,Victims.Location,
		(4500.0 * float(hitdamage) * (Normal(Victims.Location - Location))));		
	}
}

Begin:
	NormUp.Pitch = 32768;
	SetLocation( Location + Vect(0,0,16) );
	HurtRadius();
 	Destroy();
  	spawn(class'FatRing',,,,NormUp);
 	spawn(class'FlameBall',,,,rotation(VRand()));  	
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      RandRot=(0,0,0)
      NormUp=(0,0,0)
      MaxSpeed=+01000.000000
      DrawType=DT_Mesh
      Mesh=Grenade
      AmbientGlow=64
      Fatness=128
      bUnlit=True
      bMeshCurvy=False
      bBounce=True
      bPitch=True
      bYaw=True
      bRoll=True
      RotationSpeed=120000
      DesiredRotation=(12000,5666,2334)
   End DefaultProperties
End Class

Begin Class Name=KraalBolt
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// KraalBolt.
//=============================================================================
class KraalBolt expands Projectile;

#exec MESH IMPORT MESH=bolt1 ANIVFILE=..\MODELS\bolt1_a.3D DATAFILE=..\MODELS\bolt1_d.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=bolt1 X=0 Y=0 Z=-0 YAW=64
#exec MESH SEQUENCE MESH=bolt1 SEQ=All    STARTFRAME=0   NUMFRAMES=1
#exec MESH SEQUENCE MESH=bolt1 SEQ=Still  STARTFRAME=0   NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Jmisc1 FILE=..\MODELS\misc.PCX FAMILY=Skins PALETTE=Jmisc1 
#exec MESHMAP NEW   MESHMAP=bolt1 MESH=bolt1
#exec MESHMAP SCALE MESHMAP=bolt1 X=0.05 Y=0.05 Z=0.1
#exec MESHMAP SETTEXTURE MESHMAP=bolt1 NUM=1 TEXTURE=Jmisc1


function Spawned()
{
	//PlaySound(sound(NailGun));
	speed = 800.0; //must set here for creature AI
	instigator = Pawn(owner);
}

auto state Flying
{
function Timer()
{
	Explode();
}

singular function Touch (Actor Other)
{
	local vector momentum;
//	log(Other.Class$" touched missile");

	if ((Other != instigator) && (SkaarjProjectile(Other) == None))
		{
		momentum = 10000.0 * Normal(Velocity);
		ProjectileHit(Other, 15, momentum);
		Destroy();
		}
}

function HitWall (vector HitNormal)
{
//	log("missile hit wall");
	Explode();
}

function Explode()
{
	spawn(class 'Electricity');
	destroy();
}

Begin:
	Physics = PHYS_Projectile;
	Acceleration = vect(0,0,0);
	Velocity = Vector(Rotation) * speed;
	SetTimer(7.0,false); //self destruct after 7.0 seconds
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      DrawType=DT_Mesh
      Mesh=bolt1
      AmbientGlow=64
      bMeshCurvy=False
   End DefaultProperties
End Class

Begin Class Name=TeleportProj
   Begin Text
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//=============================================================================
// TeleportProj.
//=============================================================================
class TeleportProj expands Projectile;

#exec MESH IMPORT MESH=TarydiumProjectile ANIVFILE=..\MODELS\aniv52.3D DATAFILE=..\MODELS\data52.3D X=0 Y=0 Z=0
#exec MESH ORIGIN MESH=TarydiumProjectile X=0 Y=0 Z=0 YAW=64
#exec MESH SEQUENCE MESH=TarydiumProjectile SEQ=All  STARTFRAME=0  NUMFRAMES=1
#exec TEXTURE IMPORT NAME=Tarydium1 FILE=..\MODELS\shells.PCX FAMILY="Skins" PALETTE=Tarydium1 ;FLAGS=2 ; if masked
#exec MESHMAP NEW   MESHMAP=TarydiumProjectile MESH=TarydiumProjectile 
#exec MESHMAP SCALE MESHMAP=TarydiumProjectile X=0.015 Y=0.015 Z=0.03
#exec MESHMAP SETTEXTURE MESHMAP=TarydiumProjectile NUM=4 TEXTURE=Tarydium1

#exec AUDIO IMPORT FILE="..\Sounds\NAILGUN.UFX" NAME="NAILGUN" FAMILY="Weapons"

function Spawned()
{
//	PlaySound(Sound 'NailGun');
	Velocity = vector(Rotation) * 360.0;
	Physics = PHYS_Projectile;
	Disable('HitWall');
	setTimer(0.1, false);
}

function HitWall( vector HitNormal )
{
	log("stick");
	Physics = PHYS_None;
}

function timer()
{
	enable('HitWall');
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   End Text
   Begin DefaultProperties
      MaxSpeed=+01000.000000
      bCollideActors=False
      DrawType=DT_Mesh
      Mesh=TarydiumProjectile
      CollisionRadius=+00005.000000
      CollisionHeight=+00005.000000
      Physics=PHYS_Projectile
   End DefaultProperties
End Class

